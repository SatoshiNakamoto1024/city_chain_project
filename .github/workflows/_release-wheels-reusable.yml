# \city_chain_project\.github\workflows\_release-wheels-reusable.yml
name: _release-wheels-reusable

on:
  workflow_call:
    inputs:
      cargo_manifest:
        type: string
        required: true
      python_wrapper_dir:
        type: string
        required: true
    secrets:
      TEST_PYPI_API_TOKEN:
        required: true
  
permissions:
  contents: write   # ← ここを追加（トップレベル）

jobs:
  build-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install protoc (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup Rust (for maturin)
        uses: dtolnay/rust-toolchain@stable

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install maturin==1.5.1 build twine

      # ★ Rust wheel を常に $GITHUB_WORKSPACE/dist へ
      - name: Build rust wheels
        run: |
          mkdir -p "$GITHUB_WORKSPACE/dist"
          maturin build \
            -m "${{ inputs.cargo_manifest }}" \
            --release --features python \
            --out "$GITHUB_WORKSPACE/dist"
          ls -al "$GITHUB_WORKSPACE/dist"

      # ★ Python ラッパーも同じ dist へ
      - name: Build python wrapper (sdist+wheel)
        working-directory: ${{ inputs.python_wrapper_dir }}
        run: |
          python -m build --outdir "$GITHUB_WORKSPACE/dist"
          ls -al "$GITHUB_WORKSPACE/dist"

      # ★ dist からまとめてアップロード
      - name: Upload to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          cd "${GITHUB_WORKSPACE}"
          twine upload --repository-url https://test.pypi.org/legacy/ \
            --skip-existing \
            "dist/"*

      - name: Attach wheels to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: ${{ github.workspace }}/dist/*
