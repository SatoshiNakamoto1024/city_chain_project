name: _release-wheels-reusable

on:
  workflow_call:
    inputs:
      cargo_manifest:
        type: string
        required: true
        # 例: DAGs/.../your_crate_rust/Cargo.toml
      python_wrapper_dir:
        type: string
        required: true
        # 例: DAGs/.../your_crate_python
    secrets:
      TEST_PYPI_API_TOKEN:
        required: true

jobs:
  build-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # protoc は Ubuntu ランナーに入れる（prost-build 等の前提）
      - name: Install protoc (Ubuntu)
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler
          protoc --version

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Setup Rust (for maturin)
        uses: dtolnay/rust-toolchain@stable

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install maturin==1.5.1 build twine

      # Rust 拡張 wheel（Linux x64; manylinux でなくてOK。必要なら --manylinux 2014 に）
      - name: Build rust wheels
        run: |
          mkdir -p "$GITHUB_WORKSPACE/dist"
          maturin build \
            -m "${{ inputs.cargo_manifest }}" \
            --release --features python \
            --out "$GITHUB_WORKSPACE/dist"

      # Python ラッパー（sdist + wheel）
      - name: Build python wrapper (sdist+wheel)
        working-directory: ${{ inputs.python_wrapper_dir }}
        run: |
          python -m build
          mkdir -p "$GITHUB_WORKSPACE/dist"
          cp -v dist/* "$GITHUB_WORKSPACE/dist/"

      # TestPyPI へアップロード（絶対パス/ワークスペース基点で確実に解決）
      - name: Upload to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          twine upload --repository-url https://test.pypi.org/legacy/ \
            "$GITHUB_WORKSPACE/dist/"*

      # GitHub Release の Assets にも添付（入手しやすく）
      - name: Attach wheels to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          files: |
            target/wheels/*.whl
            ${{ inputs.python_wrapper_dir }}/dist/*
