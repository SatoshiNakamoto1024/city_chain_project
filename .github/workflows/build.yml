# D:\city_chain_project\.github\workflows\build.yml
name: Build & Publish

on:
  push:
    tags:   [ "v*.*.*" ]   # リリースタグ
  pull_request:
  workflow_dispatch:

jobs:
# ─────────────────────────────────────────
  build-python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Build pop-python wheel
        run: |
          pip install build
          cd Algorithm/PoP/pop_python
          python -m build --wheel -o ../../dist

      - name: Test (pytest)
        run: |
          pip install ./dist/pop_python-*.whl
          pytest -q Algorithm/PoP/pop_python/test_pop.py

      - uses: actions/upload-artifact@v4
        with:
          name: python-wheel
          path: dist/pop_python-*.whl

# ─────────────────────────────────────────
  build-rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      # Rust 1.88.0 を取得
      - uses: dtolnay/rust-toolchain@1.88.0

      - uses: actions/setup-python@v5
        with: { python-version: "${{ matrix.python-version }}" }

      - name: Build pop-rust wheels
        uses: PyO3/maturin-action@v1
        with:
          args: >-
            build
            --release
            -m Algorithm/PoP/pop_rust/pyproject.toml
            --interpreter python${{ matrix.python-version }}
            --out dist

      - name: Test wheel
        run: |
          pip install dist/pop_rust-*.whl
          pytest -q Algorithm/PoP/pop_rust/tests

      - uses: actions/upload-artifact@v4
        with:
          name: rust-wheels-${{ matrix.python-version }}
          path: dist/*.whl

# ─────────────────────────────────────────
  publish:
    needs: [build-python, build-rust]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v4
        with: { path: dist }

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.11
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist
